<?xml version='1.0' encoding='UTF-8'?><!-- Published by JAX-WS RI (http://jax-ws.java.net). RI's version is Metro/2.4.2 (UNKNOWN-17d59c9; 2018-09-26T15:16:30-0700) JAXWS-RI/2.3.1 JAXWS-API/2.3.1 JAXB-RI/2.3.1 JAXB-API/2.3.1 svn-revision#unknown. --><xs:schema xmlns:tns="http://ws.session.ejb/" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="1.0" targetNamespace="http://ws.session.ejb/">

<xs:element name="AppointmentNotFoundException" type="tns:AppointmentNotFoundException"/>

<xs:element name="BusinessCategoryNotFoundException" type="tns:BusinessCategoryNotFoundException"/>

<xs:element name="CreateNewAppointmentEntityException" type="tns:CreateNewAppointmentEntityException"/>

<xs:element name="CustomerAlreadyExistsException" type="tns:CustomerAlreadyExistsException"/>

<xs:element name="CustomerNotFoundException" type="tns:CustomerNotFoundException"/>

<xs:element name="InputDataValidationException" type="tns:InputDataValidationException"/>

<xs:element name="InvalidLoginException" type="tns:InvalidLoginException"/>

<xs:element name="ServiceProviderNotFoundException" type="tns:ServiceProviderNotFoundException"/>

<xs:element name="UnauthorisedOperationException" type="tns:UnauthorisedOperationException"/>

<xs:element name="UnknownPersistenceException" type="tns:UnknownPersistenceException"/>

<xs:element name="addAppointment" type="tns:addAppointment"/>

<xs:element name="addAppointmentResponse" type="tns:addAppointmentResponse"/>

<xs:element name="cancelAppointment" type="tns:cancelAppointment"/>

<xs:element name="cancelAppointmentResponse" type="tns:cancelAppointmentResponse"/>

<xs:element name="customerLogin" type="tns:customerLogin"/>

<xs:element name="customerLoginResponse" type="tns:customerLoginResponse"/>

<xs:element name="rateServiceProvider" type="tns:rateServiceProvider"/>

<xs:element name="rateServiceProviderResponse" type="tns:rateServiceProviderResponse"/>

<xs:element name="registerCustomer" type="tns:registerCustomer"/>

<xs:element name="registerCustomerResponse" type="tns:registerCustomerResponse"/>

<xs:element name="retrieveAllBusinessCategories" type="tns:retrieveAllBusinessCategories"/>

<xs:element name="retrieveAllBusinessCategoriesResponse" type="tns:retrieveAllBusinessCategoriesResponse"/>

<xs:element name="retrieveCustomerAppointments" type="tns:retrieveCustomerAppointments"/>

<xs:element name="retrieveCustomerAppointmentsResponse" type="tns:retrieveCustomerAppointmentsResponse"/>

<xs:element name="retrieveServiceProviderByProviderId" type="tns:retrieveServiceProviderByProviderId"/>

<xs:element name="retrieveServiceProviderByProviderIdResponse" type="tns:retrieveServiceProviderByProviderIdResponse"/>

<xs:element name="retrieveServiceProvidersByCategoryIdAndCity" type="tns:retrieveServiceProvidersByCategoryIdAndCity"/>

<xs:element name="retrieveServiceProvidersByCategoryIdAndCityResponse" type="tns:retrieveServiceProvidersByCategoryIdAndCityResponse"/>

<xs:complexType name="rateServiceProvider">
<xs:sequence>
<xs:element name="email" type="xs:string" minOccurs="0"/>
<xs:element name="password" type="xs:string" minOccurs="0"/>
<xs:element name="providerId" type="xs:long" minOccurs="0"/>
<xs:element name="rating" type="xs:int" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="rateServiceProviderResponse">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="InvalidLoginException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="ServiceProviderNotFoundException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="retrieveServiceProvidersByCategoryIdAndCity">
<xs:sequence>
<xs:element name="categoryId" type="xs:long" minOccurs="0"/>
<xs:element name="city" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="retrieveServiceProvidersByCategoryIdAndCityResponse">
<xs:sequence>
<xs:element name="return" type="tns:serviceProviderEntity" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="serviceProviderEntity">
<xs:sequence>
<xs:element name="address" type="xs:string" minOccurs="0"/>
<xs:element name="appointments" type="tns:appointmentEntity" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
<xs:element name="businessCategory" type="tns:businessCategoryEntity" minOccurs="0"/>
<xs:element name="businessRegNum" type="xs:string" minOccurs="0"/>
<xs:element name="city" type="xs:string" minOccurs="0"/>
<xs:element name="email" type="xs:string" minOccurs="0"/>
<xs:element name="isCancelled" type="xs:boolean"/>
<xs:element name="name" type="xs:string" minOccurs="0"/>
<xs:element name="overallRating" type="xs:int"/>
<xs:element name="password" type="xs:string" minOccurs="0"/>
<xs:element name="phone" type="xs:string" minOccurs="0"/>
<xs:element name="providerId" type="xs:long" minOccurs="0"/>
<xs:element name="status" type="tns:serviceProviderStatus" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="appointmentEntity">
<xs:sequence>
<xs:element name="appointmentId" type="xs:long" minOccurs="0"/>
<xs:element name="appointmentNo" type="xs:long" minOccurs="0"/>
<xs:element name="businessCategory" type="xs:string" minOccurs="0"/>
<xs:element name="customer" type="tns:customerEntity" minOccurs="0"/>
<xs:element name="date" type="xs:dateTime" minOccurs="0"/>
<xs:element name="isCancelled" type="xs:boolean" minOccurs="0"/>
<xs:element name="rating" type="xs:int" minOccurs="0"/>
<xs:element name="serviceProvider" type="tns:serviceProviderEntity" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="customerEntity">
<xs:sequence>
<xs:element name="address" type="xs:string" minOccurs="0"/>
<xs:element name="age" type="xs:int" minOccurs="0"/>
<xs:element name="city" type="xs:string" minOccurs="0"/>
<xs:element name="customerId" type="xs:long" minOccurs="0"/>
<xs:element name="email" type="xs:string" minOccurs="0"/>
<xs:element name="firstName" type="xs:string" minOccurs="0"/>
<xs:element name="gender" type="xs:unsignedShort" minOccurs="0"/>
<xs:element name="identityNum" type="xs:string" minOccurs="0"/>
<xs:element name="lastName" type="xs:string" minOccurs="0"/>
<xs:element name="password" type="xs:string" minOccurs="0"/>
<xs:element name="phone" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="businessCategoryEntity">
<xs:sequence>
<xs:element name="category" type="xs:string" minOccurs="0"/>
<xs:element name="categoryId" type="xs:long" minOccurs="0"/>
<xs:element name="serviceProviders" type="tns:serviceProviderEntity" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="BusinessCategoryNotFoundException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="retrieveCustomerAppointments">
<xs:sequence>
<xs:element name="email" type="xs:string" minOccurs="0"/>
<xs:element name="password" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="retrieveCustomerAppointmentsResponse">
<xs:sequence>
<xs:element name="return" type="tns:appointmentEntity" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="CustomerNotFoundException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="registerCustomer">
<xs:sequence>
<xs:element name="newCustomerEntity" type="tns:customerEntity" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="registerCustomerResponse">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="CustomerAlreadyExistsException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="InputDataValidationException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="UnknownPersistenceException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="retrieveAllBusinessCategories">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="retrieveAllBusinessCategoriesResponse">
<xs:sequence>
<xs:element name="return" type="tns:businessCategoryEntity" minOccurs="0" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="cancelAppointment">
<xs:sequence>
<xs:element name="email" type="xs:string" minOccurs="0"/>
<xs:element name="password" type="xs:string" minOccurs="0"/>
<xs:element name="appointmentNo" type="xs:long" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="cancelAppointmentResponse">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="AppointmentNotFoundException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="UnauthorisedOperationException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="retrieveServiceProviderByProviderId">
<xs:sequence>
<xs:element name="providerId" type="xs:long" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="retrieveServiceProviderByProviderIdResponse">
<xs:sequence>
<xs:element name="return" type="tns:serviceProviderEntity" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="customerLogin">
<xs:sequence>
<xs:element name="email" type="xs:string" minOccurs="0"/>
<xs:element name="password" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="customerLoginResponse">
<xs:sequence>
<xs:element name="return" type="tns:customerEntity" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="addAppointment">
<xs:sequence>
<xs:element name="email" type="xs:string" minOccurs="0"/>
<xs:element name="password" type="xs:string" minOccurs="0"/>
<xs:element name="providerId" type="xs:long" minOccurs="0"/>
<xs:element name="newAppointmentEntity" type="tns:appointmentEntity" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:complexType name="addAppointmentResponse">
<xs:sequence/>
</xs:complexType>

<xs:complexType name="CreateNewAppointmentEntityException">
<xs:sequence>
<xs:element name="message" type="xs:string" minOccurs="0"/>
</xs:sequence>
</xs:complexType>

<xs:simpleType name="serviceProviderStatus">
<xs:restriction base="xs:string">
<xs:enumeration value="PENDING"/>
<xs:enumeration value="APPROVE"/>
<xs:enumeration value="BLOCK"/>
</xs:restriction>
</xs:simpleType>
</xs:schema>